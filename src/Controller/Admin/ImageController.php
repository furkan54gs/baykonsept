<?php

namespace App\Controller\Admin;

use App\Entity\Admin\Image;
use App\Form\ImageType;
use App\Repository\Admin\ImageRepository;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

class ImageController extends AbstractController
{
    /**
     * @Route("/admin/image", name="admin_image")
     */
    public function index()
    {
        return $this->render('admin/image/index.html.twig', [
            'controller_name' => 'ImageController',
        ]);
    }
    /**
     * @Route("/admin/image/new/{id}/{pid}", name="admin_image_del", methods="GET")
     */
    public function del(Request $request,Image $image,$pid): Response
    {
        $em = $this->getDoctrine()->getManager();
        $em->remove($image);
        $em->flush();

        return $this->redirectToRoute('admin_image_new',array('pid'=>$pid) );


    }
    /**
     * @Route("/admin/image/new/{pid}", name="admin_image_new", methods="GET|POST")
     */
    public function new(Request $request,$pid,ImageRepository $imageRepository): Response
    {
        $imagelist =$imageRepository->findBy(
        ['product_id'=> $pid]
        );
        $image = new image();
        $form = $this->createForm(ImageType::class, $image);
        $form->handleRequest($request);

        if ($request->files->get('imagename')) {

            $file=$request->files->get('imagename');
            $fileName=$this->generateUniqueFileName().'.'.$file->guessExtension();

            // Move the file to the directory where brochures are stored
            try {
                $file->move(
                    $this->getParameter('images_directory'),
                    $fileName
                );
            } catch (FileException $e) {
                // ... handle exception if something happens during file upload
            }
            $image->setImage($fileName);
            $image->setProductId($pid);

            $em = $this->getDoctrine()->getManager();
            $em->persist($image);
            $em->flush();
            return $this->redirectToRoute('admin_image_new',array('pid'=>$pid));

        }
        return $this->render('admin/image/new.html.twig', [
            'form' => $form->createView(),
            'pid' => $pid,
            'imagelist' => $imagelist,

            'image' => $image,
        ]);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
}
